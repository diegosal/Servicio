//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RM.Core.Data.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RMModel : DbContext
    {
        public RMModel()
            : base("name=RMModel")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int SYSInsertAddress(Nullable<int> userId, string streetName, string number, string postalCode, Nullable<bool> active)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var streetNameParameter = streetName != null ?
                new ObjectParameter("StreetName", streetName) :
                new ObjectParameter("StreetName", typeof(string));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertAddress", userIdParameter, streetNameParameter, numberParameter, postalCodeParameter, activeParameter);
        }
    
        public virtual int SYSInsertAssistControl(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertAssistControl", userIdParameter);
        }
    
        public virtual int SYSInsertCatEventuality(string eventualityName, Nullable<bool> active)
        {
            var eventualityNameParameter = eventualityName != null ?
                new ObjectParameter("EventualityName", eventualityName) :
                new ObjectParameter("EventualityName", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertCatEventuality", eventualityNameParameter, activeParameter);
        }
    
        public virtual int SYSInsertCatRecreationalArea(string areaName, Nullable<bool> active)
        {
            var areaNameParameter = areaName != null ?
                new ObjectParameter("AreaName", areaName) :
                new ObjectParameter("AreaName", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertCatRecreationalArea", areaNameParameter, activeParameter);
        }
    
        public virtual int SYSInsertCatStatus(string statusName, Nullable<bool> active)
        {
            var statusNameParameter = statusName != null ?
                new ObjectParameter("StatusName", statusName) :
                new ObjectParameter("StatusName", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertCatStatus", statusNameParameter, activeParameter);
        }
    
        public virtual int SYSInsertCatSupplier(string supplierName, string contactNumer, Nullable<bool> active)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var contactNumerParameter = contactNumer != null ?
                new ObjectParameter("ContactNumer", contactNumer) :
                new ObjectParameter("ContactNumer", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertCatSupplier", supplierNameParameter, contactNumerParameter, activeParameter);
        }
    
        public virtual int SYSInsertCatTypeCommittee(string typeCommittee, Nullable<bool> active)
        {
            var typeCommitteeParameter = typeCommittee != null ?
                new ObjectParameter("TypeCommittee", typeCommittee) :
                new ObjectParameter("TypeCommittee", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertCatTypeCommittee", typeCommitteeParameter, activeParameter);
        }
    
        public virtual int SYSInsertCatTypeUser(string typeUser, Nullable<bool> active)
        {
            var typeUserParameter = typeUser != null ?
                new ObjectParameter("TypeUser", typeUser) :
                new ObjectParameter("TypeUser", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertCatTypeUser", typeUserParameter, activeParameter);
        }
    
        public virtual int SYSInsertCatTypeVisit(string typeVisit, Nullable<bool> active)
        {
            var typeVisitParameter = typeVisit != null ?
                new ObjectParameter("TypeVisit", typeVisit) :
                new ObjectParameter("TypeVisit", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertCatTypeVisit", typeVisitParameter, activeParameter);
        }
    
        public virtual int SYSInsertCommitteeMember(Nullable<int> userId, Nullable<int> committeeTypeId, Nullable<bool> active)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var committeeTypeIdParameter = committeeTypeId.HasValue ?
                new ObjectParameter("CommitteeTypeId", committeeTypeId) :
                new ObjectParameter("CommitteeTypeId", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertCommitteeMember", userIdParameter, committeeTypeIdParameter, activeParameter);
        }
    
        public virtual int SYSInsertCompany(string companyName, Nullable<bool> active)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertCompany", companyNameParameter, activeParameter);
        }
    
        public virtual int SYSInsertEvent(Nullable<int> userId, Nullable<int> recreationalAreaId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> status)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var recreationalAreaIdParameter = recreationalAreaId.HasValue ?
                new ObjectParameter("RecreationalAreaId", recreationalAreaId) :
                new ObjectParameter("RecreationalAreaId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertEvent", userIdParameter, recreationalAreaIdParameter, startDateParameter, endDateParameter, statusParameter);
        }
    
        public virtual int SYSInsertInternalBox(Nullable<decimal> amount)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertInternalBox", amountParameter);
        }
    
        public virtual int SYSInsertInternalExpense(Nullable<int> userId, Nullable<decimal> amount)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertInternalExpense", userIdParameter, amountParameter);
        }
    
        public virtual int SYSInsertPayment(Nullable<int> userId, Nullable<decimal> amount, Nullable<bool> paymentStatus)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var paymentStatusParameter = paymentStatus.HasValue ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertPayment", userIdParameter, amountParameter, paymentStatusParameter);
        }
    
        public virtual int SYSInsertTicket(Nullable<int> userId, Nullable<int> eventualityId, Nullable<int> statusId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var eventualityIdParameter = eventualityId.HasValue ?
                new ObjectParameter("EventualityId", eventualityId) :
                new ObjectParameter("EventualityId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertTicket", userIdParameter, eventualityIdParameter, statusIdParameter);
        }
    
        public virtual int SYSInsertUser(Nullable<int> companyId, Nullable<int> typeId, string userName, string userMiddleName, string userLastName, string userMotherName, string email, string passWord, Nullable<bool> active)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userMiddleNameParameter = userMiddleName != null ?
                new ObjectParameter("UserMiddleName", userMiddleName) :
                new ObjectParameter("UserMiddleName", typeof(string));
    
            var userLastNameParameter = userLastName != null ?
                new ObjectParameter("UserLastName", userLastName) :
                new ObjectParameter("UserLastName", typeof(string));
    
            var userMotherNameParameter = userMotherName != null ?
                new ObjectParameter("UserMotherName", userMotherName) :
                new ObjectParameter("UserMotherName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passWordParameter = passWord != null ?
                new ObjectParameter("PassWord", passWord) :
                new ObjectParameter("PassWord", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertUser", companyIdParameter, typeIdParameter, userNameParameter, userMiddleNameParameter, userLastNameParameter, userMotherNameParameter, emailParameter, passWordParameter, activeParameter);
        }
    
        public virtual int SYSInsertVehiclee(Nullable<int> userId, string plates, string model, Nullable<bool> active)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var platesParameter = plates != null ?
                new ObjectParameter("Plates", plates) :
                new ObjectParameter("Plates", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertVehiclee", userIdParameter, platesParameter, modelParameter, activeParameter);
        }
    
        public virtual int SYSInsertVisit(Nullable<int> visitId, Nullable<int> userId, string visitName, string carnet, string plates)
        {
            var visitIdParameter = visitId.HasValue ?
                new ObjectParameter("VisitId", visitId) :
                new ObjectParameter("VisitId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var visitNameParameter = visitName != null ?
                new ObjectParameter("VisitName", visitName) :
                new ObjectParameter("VisitName", typeof(string));
    
            var carnetParameter = carnet != null ?
                new ObjectParameter("Carnet", carnet) :
                new ObjectParameter("Carnet", typeof(string));
    
            var platesParameter = plates != null ?
                new ObjectParameter("Plates", plates) :
                new ObjectParameter("Plates", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SYSInsertVisit", visitIdParameter, userIdParameter, visitNameParameter, carnetParameter, platesParameter);
        }
    }
}
